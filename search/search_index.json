{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Mani's Course Notes","text":"<p>This is my home page. I will use it to organize and share my course notes.</p>"},{"location":"tutorials/go-setup/","title":"Setting up a dev container for Go","text":"<ul> <li>Primary author: Mani Pourfazli</li> <li>Reviewer: Daniel Ramsgard</li> </ul>"},{"location":"tutorials/go-setup/#before-doing-anything-make-sure-you-have-these-installed","title":"Before doing anything, make sure you have these installed:","text":"<ol> <li><code>Docker Desktop</code> for mac, windows, or linux</li> <li><code>VS Code</code> for mac, windows, or linux</li> <li><code>Git</code> for mac, windows, or linux</li> <li>A <code>Github</code> Account</li> </ol> <p>!!! Note     The concepts above and below are good to know but not mandatory to be able to follow along with the tutorial:     basic knowledge of Go Syntax,     basic proficiency of Git Commands,     and <code>Docker Desktop</code>.</p>"},{"location":"tutorials/go-setup/#also-make-sure-you-have-an-understanding-of-these-topics","title":"Also make sure you have an understanding of these topics:","text":"<ol> <li>Some basic knowledge of Go Syntax.</li> <li>Basic knowledge of the main Git Commands and syntax</li> </ol>"},{"location":"tutorials/go-setup/#once-you-have-those-done-its-time-to-make-a-directory-to-put-your-files-into","title":"Once you have those done it's time to make a directory to put your files into:","text":"<ol> <li>In the terminal run this command <code>mkdir &lt;name&gt;</code> (the name can be whatever you want it to be) to create a new directory. </li> <li>Now, to go into the directory you just made run this command <code>cd &lt;name&gt;</code>. (same name you made in the step above)</li> <li>Once you have done that you need to create a git directory which can be done so by running <code>git init</code>.</li> </ol>"},{"location":"tutorials/go-setup/#now-make-a-github-repo","title":"Now make a github repo","text":"<ol> <li>Make a new public Github repo and copy the URL.</li> <li>Run the following to initialize an empty Git repo:</li> </ol> <pre><code>git init\ngit remote add origin &lt;GitHub Repo URL&gt;\ngit fetch origin\ngit switch -c main\n</code></pre>"},{"location":"tutorials/go-setup/#now-you-need-to-set-up-your-dev-container-follow-these-steps","title":"Now you need to set up your dev container. Follow these steps:","text":"<ol> <li>In VS Code, open your directory. You can do this by clicking on <code>File</code> then <code>Open Folder</code></li> <li>Now make sure you have the Dev Containers extension for VS Code. If you don't go ahead and install it</li> <li>Create a <code>.devcontainer directory</code> in the root of your project with the following file inside: .devcontainer/devcontainer.json</li> <li>Now put this inside the devcontainer.json file:</li> </ol> <pre><code>{\n    \"name\": \"Go Dev Container\",\n    \"image\": \"mcr.microsoft.com/devcontainers/go:latest\",\n    \"customizations\": {\n        \"vscode\": {\n            \"settings\": {},\n            \"extensions\": [\"golang.go\"]\n        }\n    }\n}\n</code></pre>"},{"location":"tutorials/go-setup/#now-you-need-to-make-a-go-file-to-put-your-code-in","title":"Now you need to make a go file to put your code in:","text":"<ol> <li>Check the version of your Go by using <code>go --version</code></li> <li>Initialize a go module using <code>go mod init &lt;your-project-name&gt;</code></li> <li>Make a file in vscode called <code>main.go</code></li> <li>Open the file you just made and paste this inside:</li> </ol> <pre><code>package main\nimport \"fmt\"\nfunc main() {\n    fmt.Println(\"Hello COMP423\")\n}\n</code></pre>"},{"location":"tutorials/go-setup/#now-run-your-program","title":"Now run your program!!","text":"<ol> <li>You can press the <code>green play looking button</code> on VS Code to run your code or you can use this command: <code>go run main.go</code></li> <li><code>go run</code> compiles and immediately runs the program and <code>go build</code> creates an executable binary that you can run separately, similar to compiling with gcc</li> <li>Once you have done that, you should see the output: \"Hello COMP423\"</li> </ol>"},{"location":"tutorials/go-setup/#now-push-your-work-to-github","title":"Now push your work to github","text":"<p>Do the following:</p> <pre><code>echo \"Go (Hello COMP423) program tutorial. Link: \\`https://manip1384.github.io/comp423-course-notes/tutorials/go-setup\\`\" &gt; README.md\ngit add .\ngit commit -m \"meaningful commit message\"\ngit push origin main\n</code></pre>"}]}